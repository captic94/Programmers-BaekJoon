ResponseEntity를 사용하는 이유
- 응답의 상태를 미리 알려주는것 (뷰단 까지 가지 않고 응답을 알려준다
  -> 응답 헤더를 제어하여, 응답의 상태값을 지정, 그것을 반환하여 

▣ 관점지향 프로그래밍(AOP)과 트랜잭션
- 

- 트랜잭션의 전파
 예) 호출된 메서드가 호출한 쪽의 트랜잭션에서 실행되는 경우
    a메서드 안에서 b메서드를 호출할 때
    b메서드는 a메서드가 사용하는 트랜잭션을 사용

- 트랜잭션의 전파 속성
 1. Propagation_required - 활성화된 트랜잭션이 존재한다면 스프링은 그 트랜잭션을 사용
 2. propagation_supports - 항상 새




▣ @Transactional
- maven repository에서 'spring tx' 다운
 -> root-context에 <tx:annotation-driven> 태그와 트랜잭션용 <bean> 태그 추가

<tx:annotation-driven/>
<bean
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
	id="transactionManager">
	<property name="dataSource" ref="dataSource3"></property>	// 여기서 ref는 hikariCP의 id
</bean>


