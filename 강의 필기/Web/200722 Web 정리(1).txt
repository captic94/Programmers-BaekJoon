HTML은 정적 / 동적으로 구분
정적: 파일 형태로 존재
동적: 웹 애플리케이션으로 생성된 것

웹 애플리케이션 = 웹 모듈 = 웹

객체지향 프로그래밍 기법이 도입되어 웹 어플리케이션을 객체형태로 구현 -> 서블릿(Servlet)

○ 서블릿이란
 - 자바를 기반으로 하는 웹 어플리케이션 프로그래밍 기술 -> 자바 클래스 형태로 웹 어플리케이션을 작성 : 서블릿 클래스
 - 서블릿 클래스의 규칙
  1) javax.servlet 패키지에 속하는 Servlet 인터페이스를 구현(Implement)해야 한다
  2) doGet 또는 do Post라는 메서드를 선언하고, 그 안에 서블릿 클래스가 호출되었을 때 해야할 일을 써 넣어야 한다

 - 웹 컨테이너는 서블릿 클래스를 가지고 서블릿 객체를 만든 다음 그 객체를 초기화해서 웹 서비스를 할 수 있는 상태로 만드는데,
   이 작업을 거친 서블릿 객체만 서블릿이라고 할 수 있다
   [서블릿 클래스] --인스턴스화--> [서블릿 객체] --초기화--> [서블릿(상태)]
                 						--> 서블릿 상태여야만 

- 문자 단위의 출력 스트림 : PrintWriter 클래스

○ JSP
 - 서블릿 클래스와 반대로 HTML 문서 안에 자바 코드가 삽입되는 구조
<% 자바 명령문 %>
<%= 자바 식 %>



클라이언트의 요청을 처리할 때는? = Servelt
클라이언트에게 응답할 떄는? = JSP

페이지 이동 방법
1. 서버에서 이동 (forward)
 -> RequestDispatcher의 forward()
 - 기존 페이지의 request/response를 다른 페이지에게 전달하고 돌아오지 않는다
 - 기존 페이지의 응답버퍼 내용을 clear 하고 전달한다

※ 서버에서 데이터?를 보낼 때 보낼 내용을 다 보낼때 까지 '버퍼에 채우고 버퍼가 가득 차면 flush'를 반복

2. 클라이언트에서 재요청 (redirect)
 -> response.sendRedirect()

3. 다른페이지내용 포함 (include)
 -> RequestDispatcher의 include( )
 - 기존 페이지의 request/response를 다른 페이지에게 전달하고 돌아온다
 - 기존 페이지의 응답버퍼 내용을 clear 안하고 전달한다


JSP

JSPWriter = PrintWriter + BufferedWriter -> 출력스트림




Buffer - 크기는 8KB
서버가 전달하려는 데이터의 크기가 이거보다 크면 문제??
